---
- name: Determine If We Are Running In AWS
  become: no
  set_fact:
      running_in_aws: ansible_user_id == "ec2-user"

- name: Copy Repository File
  become: yes
  template:
        src: templates/mongo-org-{{ ansible_distribution }}.repo.j2
        dest: "/etc/yum.repos.d/mongodb-org-{{ mongodb_version }}.repo"
  when: mongodb_install and (ansible_pkg_mgr == "yum")

# currently, there is a gpg key mismatch so I'm turning off checking for now
- name: Install MongoDB
  become: yes
  yum:
      name: "mongodb-org-3.2.10"
      state: present
      update_cache: yes
      disable_gpg_check: no
  when: mongodb_install and (ansible_pkg_mgr == "yum")

- name: Install MongoDB Configuration
  become: yes
  template:
      src: templates/mongod.conf.j2
      dest: /etc/mongod.conf
      mode: 0444
      backup: yes
      force: yes
  when: mongodb_install

- name: Create Custom MongoDB Systemd Directory
  become: yes
  file:
      path: /etc/systemd/system/mongod.service.d
      state: directory
      mode: 0755
  when: mongodb_install and (ansible_service_mgr == "systemd")

- name: Copy Custom MongoDB Systemd Configuration File
  become: yes
  template:
      src: templates/var_run_script.config.j2
      dest: /etc/systemd/system/mongod.service.d/var_run_script.conf
      mode: 0444
      backup: no
      force: no
  when: mongodb_install and (ansible_service_mgr == "systemd")

- name: Copy Var Run Creation Script
  become: yes
  template:
      src: templates/create-var-run-mongodb.sh.j2
      dest: /usr/local/bin/create-var-run-mongodb.sh
      mode: 0544
      backup: no
      force: no
  when: mongodb_install

- name: Reload Systemd
  become: yes
  command: systemctl daemon-reload
  when: mongodb_install and (ansible_service_mgr == "systemd")

- name: Start MongoDB daemon
  become: yes
  service:
      name: mongod
      state: restarted
      enabled: yes
  when: mongodb_install and (ansible_service_mgr == "systemd")

- name: Start MongoDB daemon
  become: yes
  service:
      name: mongod
      state: restarted
      enabled: yes
  when: mongodb_install and (ansible_service_mgr == "upstart")

- name: Install Log Rotation Software
  become: yes
  yum:
      name: "logrotate"
      state: present
      update_cache: no
  when: mongodb_agent_install and (ansible_pkg_mgr == "yum")

- name: Install Log Rotation Software
  become: yes
  apt:
      name: logrotate
      state: present
      update_cache: no
  when: mongodb_agent_install and (ansible_pkg_mgr == "apt")

- name: Copy MongoDB Log Rotation Configuration
  become: yes
  template:
      src: 'templates/log-rotation.j2'
      dest: '/etc/logrotate.d/mongod'
      mode: 0444
      backup: no
      force: no
  when: mongodb_install

- name: Install MongoDB Monitoring Agent
  become: yes
  yum:
      name: "https://cloud.mongodb.com/download/agent/monitoring/mongodb-mms-monitoring-agent-{{ mongodb_agent_version }}.x86_64.rhel7.rpm"
      state: present
      update_cache: no
      disable_gpg_check: no
  when: mongodb_agent_install and (ansible_pkg_mgr == "yum")

- name: Install Custom MongoDB Monitoring Agent Configuration
  become: yes
  template:
      src: templates/monitoring-agent.config.j2
      dest: /etc/mongodb-mms/monitoring-agent.config
      mode: 0444
      backup: yes
      force: yes
  when: mongodb_agent_install

- name: Enable MongoDB Monitoring Agent
  become: yes
  command: systemctl enable mongodb-mms-monitoring-agent.service
  when: mongodb_agent_install

- name: Start MongoDB Monitoring Agent
  become: yes
  command: systemctl restart mongodb-mms-monitoring-agent.service
  when: mongodb_agent_install
